day08
学习笔记：
客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。

- 类
  - 类的理解
    - 类是对现实生活中一类具有共同属性和行为的事物的抽象
    - 类是对象的数据类型，类是具有相同属性和行为的一组对象的集合
    - 简单理解：类就是对现实事物的一种描述
  - 类的组成
    - 属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）
    - 行为：指事物能执行的操作，例如：手机事物（打电话，发短信）
- 类和对象的关系
  - 类：类是对现实生活中一类具有共同属性和行为的事物的抽象
  - 对象：是能够看得到摸的着的真实存在的实体
  - 简单理解：类是对事物的一种描述，对象则为具体存在的事物
类的组成是由属性和行为两部分组成

- 属性：在类中通过成员变量来体现（类中方法外的变量）
- 行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）

类的定义步骤：

①定义类

②编写类的成员变量

③编写类的成员方法



## 继承
**继承**是面向对象的三大特征之一，可以使得子类具有父类的属性和方法，还可以在子类中重新定义，追加属性和方法

```java
//继承的格式
public class 子类名 extends 父类名()
//范例
public class Zi extends Fu()
//Fu：是父类，也被称为基类、超类
//Zi：是子类，也被称为派生类
```

**继承的特点**：

* 子类可以有父类的内容
* 子类还可以有自己特有的内容

**继承的好处**：

* 提高了代码的==复用性==（多个类相同的成员可以放到同一个类中）
* 提高了代码的==维护性==（如果方法的代码需要修改，修改一处即可）

**继承的弊端**：

* 继承让类与类之间产生了关系，类的耦合性增强了，当父类发生变化时子类实现也不得不跟着变化，削弱了子类的==独立性==

**什么时候使用继承**：

* 继承体现的关系：==is a==
* 假设法：有两个类A和B，如果他们满足A是B的一种或者B是A的一种，就说明他们存在继承关系，这个时候就可以考虑使用继承来体现，否则不可以
* 举例：苹果和水果、猫和动物；猫和狗（不可以）

### 继承中变量的访问特点

==就近原则==

在子类方法中访问一个变量：

* 子类局部范围找
* 子类成员范围找
* 父类成员范围找
* 如果都没有就报错（不考虑父亲的父亲）

### super关键字

this.age：表示访问本类的成员变量
super.age：表示访问父类的成员变量
